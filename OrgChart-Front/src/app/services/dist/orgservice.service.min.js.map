{"version":3,"sources":["orgservice.service.ts"],"names":["core_1","require","OrgService","http","this","prototype","getOrgDepartment","get","getEmployee","getEmployeeOrg","__decorate","Injectable","providedIn","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAMAC,WAAA,WAEE,SAAAA,EAAoBC,GAAAC,KAAAD,KAAAA,EA6BtB,OAVED,EAAAG,UAAAC,iBAAA,WACG,OAAOF,KAAKD,KAAKI,IAAI,sDAExBL,EAAAG,UAAAG,YAAA,WACE,OAAOJ,KAAKD,KAAKI,IAAI,oDAEvBL,EAAAG,UAAAI,eAAA,WACC,OAAOL,KAAKD,KAAKI,IAAI,uDA5BXL,EAAUQ,WAAA,CAHtBV,OAAAW,WAAW,CACVC,WAAY,UAEDV,GAAb,GAAaW,QAAAX,WAAAA","file":"orgservice.service.min.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrgService {\n\n  constructor(private http: HttpClient) { }\n\n  //   select \n  // NodeCode\n  // ,NodeParent\n  // ,NodeName\n  // ,ISNULL(NodeNameEn,'-') as NodeNameEn\n  // ,ISNULL(NodeNameAbb,'-') as NodeNameAbb\n  // ,DeptCode \n  // ,ISNULL(c,0) as countEmp\n  // from BEMTree.dbo.DM0103OrgDepartment as dept\n  // left join (select EM_DEPT,COUNT(EM_DEPT) as c\n  // from BEMTree.dbo.[Active BMCL Employee]\n  // group by EM_DEPT) as emp on dept.DeptCode = emp.EM_DEPT\n  // where \n  // OrgCode = (select OrgCode from BEMTree.dbo.DM0101OrgVersionControl where Locked = 0 ) \n  // and Locked  = 0 \n  // order by NodeCode\n  //    --for json auto,INCLUDE_NULL_VALUES\n  getOrgDepartment() {\n     return this.http.get(\"https://inhouse.bemplc.co.th/OrgDevapi/department\");\n  }\n  getEmployee() {\n    return this.http.get(\"https://inhouse.bemplc.co.th/OrgDevapi/employee\");\n  }\n  getEmployeeOrg() {\n   return this.http.get(\"https://inhouse.bemplc.co.th/OrgDevapi/employeeOrg\");\n  }\n\n}\n"]}